<SyGuS> := <SetLogicCmd> <SynthFunCmd> <VarDeclCmd>+ <ConstraintCmd>+ <CheckSynthCmd>
<SetLogicCmd> ::= (set-logic LIA)
<SynthFunCmd> ::= (synth-fun <Symbol> ( (<Symbol> <SortExpr>)* ) <SortExpr> ( <NTDef>+ ))
<NTDef> ::= ( <Symbol> <SortExpr> <Term>+ )
<VarDeclCmd> ::= ( declare-var <Symbol> <SortExpr> )
<ConstraintCmd> ::= ( constraint <Term> )
<CheckSynthCmd> ::= ( check-synth )

<SpecialChar> ::= {_, +, −, ∗, &, |, !, ∼, <, >, =, /, %, ?, ., $, ˆ}
<Symbol> ::= ([a − z] | [A − Z] | <SpecialChar>)([a − z] | [A − Z] | [0-9] | <SpecialChar>)+

<Term> ::= ( <Symbol> <Term>* )
        | <Literal>
        | <Symbol>

<Literal> ::= <IntConst> | <BoolConst>
<IntConst> ::= [0 − 9] + | − [0 − 9] +
<BoolConst> ::= true | false

<SortExpr> ::= Int | Bool




<FunDefCmd> ::= (define-fun <Symbol> ( ( <Symbol> <SortExpr> )* ) <SortExpr> <Term> )



+ - * / mod
and or not =>
> < >= <= =
ite
